<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- 数据源配置, 使用 druid 数据库连接池 -->
    <bean id="cmsSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="${cms.jdbc.driverClassName}"/>
        <property name="url" value="${cms.jdbc.url}"/>
        <property name="username" value="${cms.jdbc.username}"/>
        <property name="password" value="${cms.jdbc.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${cms.jdbc.initialSize}"/>
        <property name="minIdle" value="${cms.jdbc.minIdle}"/>
        <property name="maxActive" value="${cms.jdbc.maxActive}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${cms.jdbc.maxWait}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${cms.jdbc.timeBetweenEvictionRunsMillis}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${cms.jdbc.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${cms.jdbc.validationQuery}"/>
        <property name="testWhileIdle" value="${cms.jdbc.testWhileIdle}"/>
        <property name="testOnBorrow" value="${cms.jdbc.testWhileIdle}"/>
        <property name="testOnReturn" value="${cms.jdbc.testOnReturn}"/>
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="${cms.jdbc.filters}"/>
    </bean>

    <bean id="cmsJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource">
            <ref bean="cmsSource"/>
        </property>
    </bean>
    <bean id="cmsSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="cmsSource"/>
        <property name="configLocation" value="classpath:config/mybatis-config.xml"></property>
        <property name="typeAliasesPackage" value="com.cab.bean.entity"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个 -->
                        <value>
                            helperDialect=mysql
                            reasonable=true
                            supportMethodsArguments=true
                            params=count=countSql
                            autoRuntimeDialect=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"  value="com.cab.dao.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="cmsSqlSessionFactory" />
    </bean>

    <bean id="cmsTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="cmsSource"/>
    </bean>

    <!-- 用注解来实现事务管理 -->
    <tx:annotation-driven transaction-manager="cmsTransactionManager"/>

</beans>
